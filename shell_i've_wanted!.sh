#こんなシェル書きたい

#パイプ、リフダイレクトの処理を打つのさえ煩わしく思うあなたへ。

#対話的に日付を指定して新人のためにその日に打ってたコマンドを遡れるhistory確認コマンド
#その日の終わりにhistoryを保存している前提
#/20210406/みたいに保存場所が体系的に保存している前提
#その日の途中で消したターミナルで打っていたコマンドの履歴は？

#history | grep 〇〇 って打つのがめんどい。
#対話的に探したいワード入れたら抽出してくれるスクリプト

#日付か会社ごとに管理したフォルダから丸ごと特定のフォルダに向けて診断のテキスト出力をcp コピーしてくれるスクリプト

#シェルスクリプトって変数とかの文字列はクオーテーションの有無を気にしないのか。
#だったら「特定の文字列にマッチさせたいとき」とかで文字列をここに書きたいときは明示的にユーザ側ですればいいのか。

#$?は直前のコマンドの終了ステータスコードのみ保持しているので判定したいコマンドとif文の間で別のコマンドの実行をする場合には一度変数に$?の内容を保持しておく

#TCP、UDP、ポート、サービス、のどのシェルスクリプトを実行するかはユーザに委ねて、
#できた！ユーザが調べたいURL(URL)、
#できた！ユーザから-oNのオプションとして出力してほしいテキストのYYYY(year)、MM(month)、DD(day)、(もしくはYYYY_MM_DDをユーザから受け取るとしてdateとか)の入力を受け取って

#rootのフォルダにいてこのコマンド打たない？
#ってことばそのフォルダにいるかどうかを判断して、rootフォルダ内だったら普通ユーザのフォルダ内とか、所望のフォルダに向けてテキストを移すかコピーするかする？
#rootフォルダにいずにsudoで打ちたいときは？

#オプションは引数として持たせたくない。
#もしくは「TCPのポートスキャンを実行するこのスクリプトのデフォルトのオプションは〇〇です。追加したいオプションはありますか？」
#みたいにしたい。

#オプションとか、オプションで指定するポートについて格納できるようにバッファとして予め10個くらい変数用意しておくしかできない。
#コマンド打つ前に動的に新しく引数を増やせない。

#「
#URL------:AAA
#folder---:BBB/CCC/
#log_name-:DDD.txt
#この内容でコマンドを打ちますか？
#ok? (y/N): y
#」
#みたいなメッセージが表示されてy or nって確認してから実行されるみたいなスクリプトにしたい

#コマンドが終わったら「良い診断生活を！Bye！」
#「このコマンドは打ち終わったけど、TCP、UDP、ポート、サービスのほかの種類の診断漏れはない？」みたいな。
#「高名な診断士よ。コマンドの終わりに言葉を聞いておくれ」
#ok? (y/N): y
#「〇〇」
#ok? (y/N): n
#「ケチな診断士だな。ポート閉じるぞ！」
#本当に閉じるコマンドを書いても面白い。
#メッセージ機能は必要に応じてオンオフ切り替えられるようにする。
#忙しい時にターミナルに説法されてもイラつくだけ。
#コマンドが終わったらランダムにメッセージが出るようにしたい。
#テキストを配列に入れておいて
#乱数を生成して配列の番号に指定する。ramdom=i; echo message[i]みたいな。

#電子の海に還れ

#ペイロードという船に乗ってサーバーという約束の地に向かうパケット
#-名も無きビット

#TCP:「今お時間いいですか？」
#    「こういう話したいです。」
#...

#UDP:「時間いいよねこういう話するよへぇ時間なかったんだ知らないよそれでね...」

#暗号のジョークとか。

#理系がわかるジョーク、ブラックユーモア

#関係ないけど、自分でインタラクティブにユーザとやりとりして内容を書き換えられるセルフホストなファイルって作れない？

#gitに上げているのを実のファイルにして、PATHを通した/bin/以下のファイルをシンボリックリンクにするか。

#"シェバン！"とか"shebang"って打ったら#!/bin/shって出るスニペットが欲しい。本当なら"シェ！"だけど。

#nmap本来の時間経過を邪魔しないようなプログレスバーとか書けない？